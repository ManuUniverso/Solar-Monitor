
/*SOLAR INVERTImage size: 68x9 (3.53 kb)Memory on µC: 1224 bytes
const PROGMEM uint16_t SolarOutBitmap[SolarOut_WIDTH * SolarOut_HEIGHT] = {*/
#define SolarOut_WIDTH 68
#define SolarOut_HEIGHT 9
/*INVERTLOAD mage size: 38x9 (3.73 kbMemory on µC: 684 bytes 
const PROGMEM uint16_t InvrtOutBitmap[InvrtOut_WIDTH * InvrtOut_HEIGHT] = {*/
#define InvrtOut_WIDTH 38
#define InvrtOut_HEIGHT 9
/*INVRT INPUTImage size: 8x73 (3.56 kb)Memory on µC: 1168 bytes
const PROGMEM uint16_t InvrtInBitmap[InvrtIn_WIDTH * InvrtIn_HEIGHT] = {*/ 
#define InvrtIn_WIDTH 8
#define InvrtIn_HEIGHT 73
/*CHRGER INVERTImage size: 38x9 (3.74 kb)Memory on µC: 684 bytes 
const PROGMEM uint16_t ChrgInvrtBitmap[ChrgInvrt_WIDTH * ChrgInvrt_HEIGHT] = {*/
#define ChrgInvrt_WIDTH 38
#define ChrgInvrt_HEIGHT 9
/*CHRGER BATImage size: 9x57 (3.71 kb)Memory on µC: 1026 bytes
const PROGMEM uint16_t ChrgBATBitmap[ChrgBAT_WIDTH * ChrgBAT_HEIGHT] = {*/
#define ChrgBAT_WIDTH 9
#define ChrgBAT_HEIGHT 57
/*BAT Invert Size: 73x9 (3.61 kb)Memory on µC: 1314 bytes
const PROGMEM uint16_t BATInvrtBitmap[BATInvrt_WIDTH * BATInvrt_HEIGHT] = {*/ 
#define BATInvrt_WIDTH 73
#define BATInvrt_HEIGHT 9


/*CHRGER BAT
 	Image size: 9x57 (3.71 kb)
File type : image/png
Memory on µC: 1026 bytes*/ 
const PROGMEM uint16_t ChrgBATBitmap[ChrgBAT_WIDTH * ChrgBAT_HEIGHT] = {
0xc1c5, 0xc288, 0xdc91, 0xee58, 0xee58, 0xee58, 0xdc91, 0xc288, 0xc1c5, 0xc288, 0xc288, 0xf7df, 0xffff, 0xf7df, 0xffff, 0xe79f, // 0x0010 (16)
0xc288, 0xc288, 0xdc91, 0xffff, 0xdf3e, 0x6d1b, 0x54ba, 0x7d5b, 0xef9f, 0xef9f, 0xc288, 0xdc91, 0xf7df, 0x4c7a, 0x2bb9, 0x3c19, // 0x0020 (32)
0x2398, 0x6d1b, 0xffff, 0xdc91, 0xee58, 0xc6de, 0x33f9, 0x445a, 0x4c5a, 0x4439, 0x443a, 0xe77e, 0xee58, 0xee58, 0xc6fe, 0x33f9, // 0x0030 (48)
0x4439, 0x4c5a, 0x3c19, 0x4439, 0xe77f, 0xee58, 0xdc91, 0xffff, 0x5cba, 0x33d9, 0x4c5a, 0x2bb9, 0x7d5b, 0xffff, 0xdc91, 0xc288, // 0x0040 (64)
0xf7bf, 0xe77f, 0x64da, 0x1358, 0x7d5b, 0xf7bf, 0xffff, 0xdc91, 0xc288, 0xc288, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xdc91, // 0x0050 (80)
0xc288, 0xc1c5, 0xc288, 0xef9f, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xc288, 0xc288, 0xb0e1, 0xb0e1, 0xe77f, 0x8dbc, 0x1358, 0x8dbc, // 0x0060 (96)
0xffff, 0xb0e1, 0xb0e1, 0xdc91, 0xdc91, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xe77f, 0xdc91, 0xdc91, 0xffff, 0xffff, 0xffff, 0x8dbc, // 0x0070 (112)
0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0080 (128)
0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, // 0x0090 (144)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, // 0x00a0 (160)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, // 0x00b0 (176)
0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x00c0 (192)
0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, // 0x00d0 (208)
0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x00e0 (224)
0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, // 0x00f0 (240)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, // 0x0100 (256)
0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0110 (272)
0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, // 0x0120 (288)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, // 0x0130 (304)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, // 0x0140 (320)
0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0150 (336)
0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0160 (352)
0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0170 (368)
0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, // 0x0180 (384)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, // 0x0190 (400)
0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0x25f3, 0x25f3, 0xf7df, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0x25f3, 0x25f3, 0x1df3, 0x1df3, // 0x01a0 (416)
0xe77f, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0x1df3, 0x1df3, 0x2633, 0x2633, 0xef9f, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0x2633, 0x2633, // 0x01b0 (432)
0x33f9, 0x753b, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xf7df, 0x5cba, 0x33f9, 0x5cba, 0xf7bf, 0xe77f, 0x64da, 0x1358, 0x7d5b, 0xf7bf, // 0x01c0 (448)
0xdf5e, 0x445a, 0xbe9d, 0xffff, 0x5cba, 0x33d9, 0x1358, 0x2bb9, 0x7d5b, 0xffff, 0x9dfc, 0xef9f, 0xc6fe, 0x33f9, 0x4439, 0x1358, // 0x01d0 (464)
0x3c19, 0x4439, 0xe77f, 0xcefe, 0xef9f, 0xc6de, 0x33f9, 0x445a, 0x4c5a, 0x4439, 0x443a, 0xe77e, 0xcf1e, 0xc6de, 0xf7df, 0x4c7a, // 0x01e0 (480)
0x2bb9, 0x3c19, 0x2398, 0x6d1b, 0xffff, 0xa63c, 0x64fb, 0xffff, 0xdf3e, 0x6d1b, 0x54ba, 0x7d5b, 0xef9f, 0xef9f, 0x4c7a, 0x33f9, // 0x01f0 (496)
0x857b, 0xf7df, 0xffff, 0xf7df, 0xffff, 0xe79f, 0x6cfb, 0x33f9, 0x4439, 0x33f9, 0x5cba, 0xa61c, 0xb67d, 0x95fc, 0x4c7a, 0x33f9, // 0x0200 (512)
0x445a
};

/*CHRGER INVERT
 	Image size: 38x9 (3.74 kb)
File type : image/png
Memory on µC: 684 bytes */
const PROGMEM uint16_t ChrgInvrtBitmap[ChrgInvrt_WIDTH * ChrgInvrt_HEIGHT] = {
0xc1c5, 0xc288, 0xc288, 0xdc91, 0xee58, 0xee58, 0xdc91, 0xdc91, 0xc288, 0xc288, 0xb0e1, 0xdc91, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0010 (16)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8d9c, 0x2bb9, 0x4439, 0x33f9, 0x5cba, 0xbe9d, // 0x0020 (32)
0xef9f, 0xef9f, 0xc6de, 0x64fb, 0x33f9, 0x4439, 0xc288, 0xc288, 0xef9f, 0xffff, 0xe77e, 0xe77f, 0xffff, 0xffff, 0xdc91, 0xc288, // 0x0030 (48)
0xb0e1, 0xdc91, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0040 (64)
0x8d9c, 0x23b9, 0x33f9, 0x753b, 0xf7bf, 0xffff, 0xc6fe, 0xc6de, 0xf7df, 0xffff, 0x857b, 0x33f9, 0xdc91, 0xe79f, 0xef9f, 0x6d1b, // 0x0050 (80)
0x443a, 0x4439, 0x7d5b, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xe77f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0060 (96)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xe77f, 0xef9f, 0xffff, 0xe77f, 0x5cba, 0x33f9, 0x33f9, 0x4c7a, 0xdf3e, // 0x0070 (112)
0xf7df, 0x5cba, 0xee58, 0xffff, 0x7d5b, 0x2398, 0x4439, 0x3c19, 0x2bb9, 0x7d5b, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, // 0x0080 (128)
0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, // 0x0090 (144)
0x64da, 0x33d9, 0x4439, 0x445a, 0x2bb9, 0x6d1b, 0xffff, 0xa61c, 0xee58, 0xf7df, 0x54ba, 0x3c19, 0x4c5a, 0x4c5a, 0x4c5a, 0x1358, // 0x00a0 (160)
0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, // 0x00b0 (176)
0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x4c5a, 0x4c5a, 0x4c5a, 0x3c19, 0x54ba, 0xf7df, 0xb67d, 0xee58, 0xffff, // 0x00c0 (192)
0x6d1b, 0x2bb9, 0x445a, 0x4439, 0x33d9, 0x64da, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, // 0x00d0 (208)
0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x7d5b, 0x2bb9, 0x3c19, 0x4439, // 0x00e0 (224)
0x2398, 0x7d5b, 0xffff, 0x95fc, 0xdc91, 0xf7df, 0xdf3e, 0x4c7a, 0x33f9, 0x33f9, 0x5cba, 0xe77f, 0xffff, 0xef9f, 0xe77f, 0xffff, // 0x00f0 (240)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe77f, 0xcefe, // 0x0100 (256)
0xcefe, 0xf7df, 0xf7bf, 0x7d5b, 0x4439, 0x443a, 0x6d1b, 0xef9f, 0xe79f, 0x4c7a, 0xc288, 0xc288, 0xffff, 0xf7df, 0xc6de, 0xc6fe, // 0x0110 (272)
0xffff, 0xf7bf, 0xc288, 0xc288, 0xb0e1, 0xdc91, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0120 (288)
0xffff, 0xffff, 0xffff, 0xffff, 0x857b, 0x1b58, 0x2bb9, 0x5cba, 0xdf5e, 0xffff, 0xe77f, 0xe77e, 0xffff, 0xef9f, 0x6cfb, 0x33f9, // 0x0130 (304)
0xc1c5, 0xc288, 0xdc91, 0xdc91, 0xee58, 0xee58, 0xdc91, 0xc288, 0xc288, 0xc1c5, 0xb0e1, 0xdc91, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0140 (320)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x2bd9, 0x4c5a, 0x33f9, 0x445a, 0x9dfc, // 0x0150 (336)
0xcefe, 0xcf1e, 0xa63c, 0x4c7a, 0x33f9, 0x445a
};

/*INVRT INPUT
 	Image size: 8x73 (3.56 kb)
File type : image/png
Memory on µC: 1168 bytes*/ 
const PROGMEM uint16_t InvrtInBitmap[InvrtIn_WIDTH * InvrtIn_HEIGHT] = {
0x4439, 0x33f9, 0x5cba, 0xa61c, 0xb67d, 0x95fc, 0x4c7a, 0x33f9, 0x33f9, 0x857b, 0xf7df, 0xffff, 0xf7df, 0xffff, 0xe79f, 0x6cfb, // 0x0010 (16)
0x64fb, 0xffff, 0xdf3e, 0x6d1b, 0x54ba, 0x7d5b, 0xef9f, 0xef9f, 0xc6de, 0xf7df, 0x4c7a, 0x2bb9, 0x3c19, 0x2398, 0x6d1b, 0xffff, // 0x0020 (32)
0xef9f, 0xc6de, 0x33f9, 0x445a, 0x4c5a, 0x4439, 0x443a, 0xe77e, 0xef9f, 0xc6fe, 0x33f9, 0x4439, 0x4c5a, 0x3c19, 0x4439, 0xe77f, // 0x0030 (48)
0xbe9d, 0xffff, 0x5cba, 0x33d9, 0x4c5a, 0x2bb9, 0x7d5b, 0xffff, 0x5cba, 0xf7bf, 0xe77f, 0x64da, 0x1358, 0x7d5b, 0xf7bf, 0xdf5e, // 0x0040 (64)
0x33f9, 0x753b, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0x5cba, 0x4439, 0x33f9, 0xef9f, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0x2bb9, // 0x0050 (80)
0x2bb9, 0x23b9, 0xe77f, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0x1b58, 0x8d9c, 0x8d9c, 0xf7df, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0x857b, // 0x0060 (96)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0070 (112)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0080 (128)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0090 (144)
0xffff, 0xf7df, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x00a0 (160)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x00b0 (176)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x00c0 (192)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x00d0 (208)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x00e0 (224)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x00f0 (240)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0100 (256)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0110 (272)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0120 (288)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xf7df, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0130 (304)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0140 (320)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0150 (336)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0160 (352)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0170 (368)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0180 (384)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x0190 (400)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x01a0 (416)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x01b0 (432)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x01c0 (448)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xf7df, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x01d0 (464)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x01e0 (480)
0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, // 0x01f0 (496)
0x95dc, 0x95dc, 0x95fc, 0x64fb, 0x1358, 0x753b, 0x95dc, 0x95dc, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, // 0x0200 (512)
0x9dfc, 0x9dfc, 0x9dfc, 0x95fc, 0x95dc, 0x9dfc, 0x9dfc, 0x95dc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0210 (528)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0220 (544)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0230 (560)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0240 (576)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

/*INVERTLOAD
mage size: 38x9 (3.73 kb)
File type : image/png
Memory on µC: 684 bytes */
const PROGMEM uint16_t InvrtOutBitmap[InvrtOut_WIDTH * InvrtOut_HEIGHT] = {
0x445a, 0x33f9, 0x4c7a, 0xa63c, 0xcf1e, 0xcefe, 0x9dfc, 0x445a, 0x33f9, 0x4c5a, 0x2bd9, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0010 (16)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xaf18, 0x0d09, 0x256c, 0x256c, 0x0d09, 0xffff, // 0x0020 (32)
0xef9f, 0xef9f, 0xc6de, 0x0d09, 0x256c, 0x256c, 0x33f9, 0x6cfb, 0xef9f, 0xffff, 0xe77e, 0xe77f, 0xffff, 0xdf5e, 0x5cba, 0x2bb9, // 0x0030 (48)
0x1b58, 0x857b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0040 (64)
0xaf18, 0x0d09, 0x256c, 0x0d09, 0xf7bf, 0xffff, 0xc6fe, 0xc6de, 0xf7df, 0xffff, 0xaf18, 0x256c, 0x4c7a, 0xe79f, 0xef9f, 0x6d1b, // 0x0050 (80)
0x443a, 0x4439, 0x7d5b, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0060 (96)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xe77f, 0xef9f, 0xffff, 0xe77f, 0x5cba, 0x33f9, 0x33f9, 0x4c7a, 0xdf3e, // 0x0070 (112)
0xf7df, 0x0d09, 0x95fc, 0xffff, 0x7d5b, 0x2398, 0x4439, 0x3c19, 0x2bb9, 0x7d5b, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, // 0x0080 (128)
0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, // 0x0090 (144)
0x64da, 0x33d9, 0x4439, 0x445a, 0x2bb9, 0x6d1b, 0xffff, 0xaf18, 0xb67d, 0xf7df, 0x54ba, 0x3c19, 0x4c5a, 0x4c5a, 0x4c5a, 0x1358, // 0x00a0 (160)
0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, // 0x00b0 (176)
0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x4c5a, 0x4c5a, 0x4c5a, 0x3c19, 0x54ba, 0xf7df, 0xaf18, 0xa61c, 0xffff, // 0x00c0 (192)
0x6d1b, 0x2bb9, 0x445a, 0x4439, 0x33d9, 0x64da, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, // 0x00d0 (208)
0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x8dbc, 0x7d5b, 0x2bb9, 0x3c19, 0x4439, // 0x00e0 (224)
0x2398, 0x7d5b, 0xffff, 0xaf18, 0x5cba, 0xf7df, 0xdf3e, 0x4c7a, 0x33f9, 0x33f9, 0x5cba, 0xe77f, 0xffff, 0xef9f, 0xe77f, 0xf7df, // 0x00f0 (240)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0100 (256)
0xffff, 0xffff, 0xf7bf, 0x7d5b, 0x4439, 0x443a, 0x6d1b, 0xef9f, 0xe79f, 0x0d09, 0x33f9, 0x857b, 0xffff, 0xf7df, 0xc6de, 0xc6fe, // 0x0110 (272)
0xffff, 0xf7bf, 0x753b, 0x33f9, 0x23b9, 0x8d9c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0120 (288)
0xffff, 0xffff, 0xffff, 0xffff, 0xaf18, 0x0d09, 0x256c, 0x0d09, 0xaf18, 0xffff, 0xe77f, 0xe77e, 0xffff, 0xef9f, 0xaf18, 0x256c, // 0x0130 (304)
0x4439, 0x33f9, 0x64fb, 0xc6de, 0xef9f, 0xef9f, 0xbe9d, 0x5cba, 0x33f9, 0x4439, 0x2bb9, 0x8d9c, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0140 (320)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xaf18, 0x0d09, 0x256c, 0x256c, 0x0d09, 0xaf18, // 0x0150 (336)
0xaf18, 0xaf18, 0xaf18, 0x0d09, 0x256c, 0x256c
};

/*SOLAR INVERT
Image size: 68x9 (3.53 kb)
File type : image/png
Memory on µC: 1224 bytes*/ 
const PROGMEM uint16_t SolarOutBitmap[SolarOut_WIDTH * SolarOut_HEIGHT] = {
0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0010 (16)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0020 (32)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0030 (48)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff39, 0xf481, 0xf481, 0xf481, 0xf481, 0xfe92, 0xffdf, // 0x0040 (64)
0xf7df, 0xf5a9, 0xf481, 0xf481, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, 0xffff, 0xefbf, 0xffff, 0xffff, // 0x0050 (80)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0060 (96)
0xffff, 0xefbf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0070 (112)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefbf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff39, 0xf481, 0xf481, // 0x0080 (128)
0xf5a9, 0xffff, 0xf7df, 0xbe9d, 0xcefe, 0xffff, 0xff39, 0xf481, 0xffff, 0xffff, 0x8dbc, 0x1358, 0x8dbc, 0xffff, 0xffff, 0xffff, // 0x0090 (144)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x00a0 (160)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x00b0 (176)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x00c0 (192)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdf5e, 0x4c7a, 0x33f9, 0x33f9, 0x753b, 0xffff, 0xfe92, 0x95dc, 0x95fc, 0x64fb, 0x1358, // 0x00d0 (208)
0x753b, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, // 0x00e0 (224)
0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, // 0x00f0 (240)
0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, // 0x0100 (256)
0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x64da, 0x33d9, 0x4459, 0x3c39, 0x2bb9, 0xbe9d, 0xffff, // 0x0110 (272)
0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, // 0x0120 (288)
0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, // 0x0130 (304)
0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, // 0x0140 (320)
0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x1358, 0x4c7a, 0x4c5a, // 0x0150 (336)
0x4c5a, 0x33f9, 0x8ddc, 0xffff, 0x9dfc, 0x9dfc, 0x95fc, 0x95dc, 0x9dfc, 0x9dfc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, // 0x0160 (352)
0x95dc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x95dc, 0x95dc, // 0x0170 (368)
0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x9e1c, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, 0x9dfc, // 0x0180 (384)
0x9dfc, 0x9dfc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x9dfc, 0x9dfc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, 0x95dc, // 0x0190 (400)
0x95dc, 0x5cba, 0x33d9, 0x445a, 0x4439, 0x2bb9, 0xb67d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x01a0 (416)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x01b0 (432)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x01c0 (448)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x01d0 (464)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd73e, 0x445a, 0x33f9, 0x33f9, 0x6d1b, 0xffff, 0xfe92, 0xffff, 0xffff, 0xffff, 0xffff, // 0x01e0 (480)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x01f0 (496)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0200 (512)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xffff, 0xffff, // 0x0210 (528)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff39, 0xf481, 0xf4e2, 0xf5a9, 0xffff, 0xefbf, 0xb67d, 0xc6bd, 0xffff, 0xe77f, 0xf481, // 0x0220 (544)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0230 (560)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0240 (576)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, // 0x0250 (592)
0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff39, 0xf481, 0xf4e2, 0xf481, 0xf5a9, 0xfe92, 0xffff, // 0x0260 (608)
0xffdf, 0xfe92, 0xf4e2, 0xf481
};

